{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asad\\\\Downloads\\\\Compressed\\\\react-website-v1-master\\\\src\\\\components\\\\pages\\\\SignUp.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../../App.css';\n\n// CORS Proxy URL\nconst CORS_PROXY_URL = \"https://cors-anywhere.herokuapp.com/\";\nconst FRAPPE_URL = \"https://ups-uat.sowaanerp.com/api/method/login\";\nconst USERNAME = \"mraza@ups.com\";\nconst PASSWORD = \"asadraza@123\";\nexport default function SignUp() {\n  // State to hold form input values\n  const [formData, setFormData] = useState({\n    firstName: ''\n  });\n\n  // Handle input changes and update state\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Function to log in and get session cookies with CORS Proxy\n  const login = async () => {\n    try {\n      const response = await axios.post(CORS_PROXY_URL + FRAPPE_URL, {\n        usr: USERNAME,\n        pwd: PASSWORD\n      }, {\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest',\n          // Ensure the request is sent from the browser\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.status === 200) {\n        console.log(\"Login successful!\");\n        return response.data; // Modify this as necessary for your specific use case\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error.response ? error.response.data : error.message);\n      return null;\n    }\n  };\n\n  // Handle form submission and post to NextERP API with CORS Proxy\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await login(); // Get authentication response\n    if (!response) {\n      alert('Login failed! Please check credentials.');\n      return;\n    }\n    try {\n      // Lead data to be sent (only first_name)\n      const leadData = {\n        doctype: \"Lead\",\n        first_name: formData.firstName\n      };\n\n      // Sending form data to Frappe API with CORS Proxy\n      const leadResponse = await axios.post(CORS_PROXY_URL + \"https://ups-uat.sowaanerp.com/api/resource/Lead\", leadData, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Lead created successfully:', leadResponse.data);\n      alert('Lead created successfully!');\n\n      // Reset form after successful submission\n      setFormData({\n        firstName: ''\n      });\n    } catch (error) {\n      console.error('Failed to create lead:', error.response ? error.response.data : error.message);\n      alert('There was an error creating the lead. Please try again.');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"Create a Lead\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"First Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"firstName\",\n    name: \"firstName\",\n    value: formData.firstName,\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n}","map":{"version":3,"names":["React","useState","axios","CORS_PROXY_URL","FRAPPE_URL","USERNAME","PASSWORD","SignUp","formData","setFormData","firstName","handleChange","e","name","value","target","login","response","post","usr","pwd","headers","status","console","log","data","error","message","handleSubmit","preventDefault","alert","leadData","doctype","first_name","leadResponse","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","required"],"sources":["C:/Users/Asad/Downloads/Compressed/react-website-v1-master/src/components/pages/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../../App.css';\n\n// CORS Proxy URL\nconst CORS_PROXY_URL = \"https://cors-anywhere.herokuapp.com/\";\nconst FRAPPE_URL = \"https://ups-uat.sowaanerp.com/api/method/login\";\nconst USERNAME = \"mraza@ups.com\";\nconst PASSWORD = \"asadraza@123\";\n\nexport default function SignUp() {\n  // State to hold form input values\n  const [formData, setFormData] = useState({\n    firstName: ''\n  });\n\n  // Handle input changes and update state\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Function to log in and get session cookies with CORS Proxy\n  const login = async () => {\n    try {\n      const response = await axios.post(\n        CORS_PROXY_URL + FRAPPE_URL,\n        {\n          usr: USERNAME,\n          pwd: PASSWORD\n        },\n        {\n          headers: {\n            'X-Requested-With': 'XMLHttpRequest', // Ensure the request is sent from the browser\n            'Content-Type': 'application/json',\n          }\n        }\n      );\n\n      if (response.status === 200) {\n        console.log(\"Login successful!\");\n        return response.data;  // Modify this as necessary for your specific use case\n      }\n    } catch (error) {\n      console.error(\"Login failed:\", error.response ? error.response.data : error.message);\n      return null;\n    }\n  };\n\n  // Handle form submission and post to NextERP API with CORS Proxy\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const response = await login(); // Get authentication response\n    if (!response) {\n      alert('Login failed! Please check credentials.');\n      return;\n    }\n\n    try {\n      // Lead data to be sent (only first_name)\n      const leadData = {\n        doctype: \"Lead\",\n        first_name: formData.firstName\n      };\n\n      // Sending form data to Frappe API with CORS Proxy\n      const leadResponse = await axios.post(\n        CORS_PROXY_URL + \"https://ups-uat.sowaanerp.com/api/resource/Lead\",\n        leadData,\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          }\n        }\n      );\n\n      console.log('Lead created successfully:', leadResponse.data);\n      alert('Lead created successfully!');\n\n      // Reset form after successful submission\n      setFormData({\n        firstName: ''\n      });\n    } catch (error) {\n      console.error('Failed to create lead:', error.response ? error.response.data : error.message);\n      alert('There was an error creating the lead. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"sign-up-container\">\n      <h1>Create a Lead</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            type=\"text\"\n            id=\"firstName\"\n            name=\"firstName\"\n            value={formData.firstName}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <button type=\"submit\" className=\"submit-btn\">Submit</button>\n      </form>\n    </div>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;;AAEtB;AACA,MAAMC,cAAc,GAAG,sCAAsC;AAC7D,MAAMC,UAAU,GAAG,gDAAgD;AACnE,MAAMC,QAAQ,GAAG,eAAe;AAChC,MAAMC,QAAQ,GAAG,cAAc;AAE/B,eAAe,SAASC,MAAMA,CAAA,EAAG;EAC/B;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACvCS,SAAS,EAAE;EACb,CAAC,CAAC;;EAEF;EACA,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCN,WAAW,CAAC;MACV,GAAGD,QAAQ;MACX,CAACK,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAME,KAAK,GAAG,MAAAA,CAAA,KAAY;IACxB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAC/Bf,cAAc,GAAGC,UAAU,EAC3B;QACEe,GAAG,EAAEd,QAAQ;QACbe,GAAG,EAAEd;MACP,CAAC,EACD;QACEe,OAAO,EAAE;UACP,kBAAkB,EAAE,gBAAgB;UAAE;UACtC,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAED,IAAIJ,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;QAC3BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAChC,OAAOP,QAAQ,CAACQ,IAAI,CAAC,CAAE;MACzB;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACT,QAAQ,GAAGS,KAAK,CAACT,QAAQ,CAACQ,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;MACpF,OAAO,IAAI;IACb;EACF,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAOhB,CAAC,IAAK;IAChCA,CAAC,CAACiB,cAAc,CAAC,CAAC;IAElB,MAAMZ,QAAQ,GAAG,MAAMD,KAAK,CAAC,CAAC,CAAC,CAAC;IAChC,IAAI,CAACC,QAAQ,EAAE;MACba,KAAK,CAAC,yCAAyC,CAAC;MAChD;IACF;IAEA,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG;QACfC,OAAO,EAAE,MAAM;QACfC,UAAU,EAAEzB,QAAQ,CAACE;MACvB,CAAC;;MAED;MACA,MAAMwB,YAAY,GAAG,MAAMhC,KAAK,CAACgB,IAAI,CACnCf,cAAc,GAAG,iDAAiD,EAClE4B,QAAQ,EACR;QACEV,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CACF,CAAC;MAEDE,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEU,YAAY,CAACT,IAAI,CAAC;MAC5DK,KAAK,CAAC,4BAA4B,CAAC;;MAEnC;MACArB,WAAW,CAAC;QACVC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACT,QAAQ,GAAGS,KAAK,CAACT,QAAQ,CAACQ,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAC;MAC7FG,KAAK,CAAC,yDAAyD,CAAC;IAClE;EACF,CAAC;EAED,oBACE9B,KAAA,CAAAmC,aAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChC1C,KAAA,CAAAmC,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,eAAiB,CAAC,eACtB1C,KAAA,CAAAmC,aAAA;IAAMQ,QAAQ,EAAEf,YAAa;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3B1C,KAAA,CAAAmC,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzB1C,KAAA,CAAAmC,aAAA;IAAOS,OAAO,EAAC,WAAW;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,aAAkB,CAAC,eAC9C1C,KAAA,CAAAmC,aAAA;IACEU,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,WAAW;IACdjC,IAAI,EAAC,WAAW;IAChBC,KAAK,EAAEN,QAAQ,CAACE,SAAU;IAC1BqC,QAAQ,EAAEpC,YAAa;IACvBqC,QAAQ;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CACE,CAAC,eACN1C,KAAA,CAAAmC,aAAA;IAAQU,IAAI,EAAC,QAAQ;IAACT,SAAS,EAAC,YAAY;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,QAAc,CACvD,CACH,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}